# Simple tests, used for debugging the testing infrastructure; and some
# additional tests for situations not covered by the other files.

---
description: Simple successes
tests:
  test1:
    description: Straightforward sucesss
    helo: example.net
    mailfrom: "foobar@example.net"
    host: 1.2.3.4
    result: pass
  test2:
    description: HELO is set, but expected to be ignored
    helo: blargh
    mailfrom: "foobar@example.net"
    host: 1.2.3.4
    result: pass
zonedata:
  example.net:
    - SPF:  v=spf1 +all
---
description: Simple failures
tests:
  test1:
    description: Straightforward failure
    helo: example.net
    mailfrom: "foobar@example.net"
    host: 1.2.3.4
    result: fail
  test2:
    description: HELO is set, but expected to be ignored
    helo: blargh
    mailfrom: "foobar@example.net"
    host: 1.2.3.4
    result: fail
zonedata:
  example.net:
    - SPF:  v=spf1 -all
---
description: Regexp edge cases for "a", "mx" and "ptr"
tests:
  ipv6-with-a:
    description: |
      Send from an ip6 address that has "a:" inside. If we incorrectly parse
      the "ip6" as "a", this results in a permerror since the host doesn't
      match.
    mailfrom: "foobar@a1.net"
    host: a::a
    result: pass
  bad-a-mask:
    description: |
      If we incorrectly parse the "ip6" as "a", this results in a permerror
      due to an invalid mask.
    mailfrom: "foobar@a2.net"
    host: 2001:db8:ff0:100::2
    result: softfail
  exp-contains-mx:
    description: exp= contains mx:, which should be ignored.
    mailfrom: "foobar@expmx.net"
    host: 1.2.3.4
    result: softfail
  exp-contains-ptr:
    description: |
      exp= contains ptr:, which should be ignored.
      Note this test case involves unusual/invalid domains.
    mailfrom: "foobar@expptr.net"
    host: 1.2.3.4
    result: softfail
zonedata:
  a1.net:
    - SPF: v=spf1 ip6:a::a ~all
  a2.net:
    - SPF: v=spf1 ip6:1a0a:cccc::/29 ~all
  expmx.net:
    - SPF: v=spf1 exp=mx:mymx.com ~all
    - MX: [10, mymx.com]
  mymx.com:
    - A: 1.2.3.4
  expptr.net:
    - SPF: v=spf1 exp=ptr:lalala.com ~all
  4.3.2.1.in-addr.arpa:
    - PTR: ptr:lalala.com.
  ptr:lalala.com:
    - A: 1.2.3.4
---
description: Error on PTR forward resolution
tests:
  broken-ptr-forward:
    description: |
      Check that if during 'ptr' forward resolution we get an error, we skip
      the domain (and consequently fail the check).
    mailfrom: "foo@domain.net"
    host: 1.2.3.4
    result: softfail
zonedata:
  domain.net:
    - SPF: v=spf1 ptr:lalala.com ~all
  4.3.2.1.in-addr.arpa:
    - PTR: lalala.com
  lalala.com:
    - TIMEOUT: true
---
description: Permanent error on 'exists' resolution
tests:
  exists-perm-error:
    description: |
      Check that if, during an 'exists' forward resolution we get an error, we
      fail the check.
    mailfrom: "foo@domain.net"
    host: 1.2.3.4
    result: softfail
zonedata:
  domain.net:
    - SPF: v=spf1 exists:lalala.com ~all
  lalala.com:
    - SERVFAIL: true
---
description: Resolve H macros correctly
tests:
  resolve-h-macros:
    description: |
      Check that '%{h}' macros are correctly resolved to the HELO/EHLO and not
      the sender domain.
    mailfrom: "foo@domain.net"
    helo: holahola
    host: 1.2.3.4
    result: pass
zonedata:
  domain.net:
    - SPF: v=spf1 exists:%{h}.com ~all
  holahola.com:
    - A: 127.0.0.2
---
description: Only include the first 10 PTR results
tests:
  only-first-10-ptr:
    description: |
      Check that if during 'ptr' forward resolution we only consider the first
      10 names, and ignore the rest.
    mailfrom: "foo@domain.net"
    host: 1.2.3.4
    result: softfail
zonedata:
  domain.net:
    - A: 127.0.0.1
    - SPF: v=spf1 ptr ~all
  4.3.2.1.in-addr.arpa:
    - PTR: dom01.com
    - PTR: dom02.com
    - PTR: dom03.com
    - PTR: dom04.com
    - PTR: dom05.com
    - PTR: dom06.com
    - PTR: dom07.com
    - PTR: dom08.com
    - PTR: dom09.com
    - PTR: dom10.com
    # Entries below here should get dropped. They would make it pass.
    - PTR: domain.net
  dom01.com:
    - A: 127.0.0.1
  dom02.com:
    - A: 127.0.0.2
  dom03.com:
    - A: 127.0.0.3
  dom04.com:
    - A: 127.0.0.4
  dom05.com:
    - A: 127.0.0.5
  dom06.com:
    - A: 127.0.0.6
  dom07.com:
    - A: 127.0.0.7
  dom08.com:
    - A: 127.0.0.8
  dom09.com:
    - A: 127.0.0.9
  dom10.com:
    - A: 127.0.0.10
